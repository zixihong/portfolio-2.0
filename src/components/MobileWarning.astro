<div class="mobile-warning">
  <div class="warning-content">
    <p><b>sorry, the fig tree experience is not available in safari browsers.</b></p>
    <p><i style="color: #999; font-weight: 300;">safari does not support svg event propagation.</i></p>
    <button id="viewSimplifiedVersion" class="simplified-button">View Simplified Version</button>
    <p>- <a href="https://linktr.ee/zixihong" target="_blank" rel="noopener noreferrer" style="color: #666; text-decoration: underline;">bryan hong</a></p>
    <!-- <p>sorry, please visit on a computer for the interactive fig tree experience.</p> -->
  </div>
</div>

<script>
  // Safari detection function
  function isSafari() {
    const ua = window.navigator.userAgent;
    const isSafariDesktop = ua.includes('Safari') && !ua.includes('Chrome');
    
    // For iOS Safari (including iOS devices that might use other browser apps)
    const iOS = /iPad|iPhone|iPod/.test(ua) || (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1);
    const webkit = ua.includes('WebKit');
    const isSafariMobile = iOS && webkit && !ua.includes('CriOS') && !ua.includes('FxiOS');
    
    return isSafariDesktop || isSafariMobile;
  }

  // Only show the warning for Safari browsers
  const warningElement = document.querySelector('.mobile-warning');
  if (warningElement) {
    if (isSafari()) {
      (warningElement as HTMLElement).style.display = 'flex';
      document.body.style.overflow = 'hidden';
      
      // Hide main content and nav when Safari is detected
      const mainElements = document.querySelectorAll('main, nav');
      mainElements.forEach(el => {
        if (el) (el as HTMLElement).style.display = 'none';
      });
      
      // Set up simplified view button
      const simplifiedButton = document.getElementById('viewSimplifiedVersion');
      if (simplifiedButton) {
        simplifiedButton.addEventListener('click', () => {
          // Hide warning screen
          (warningElement as HTMLElement).style.display = 'none';
          
          // Show simplified view
          const event = new CustomEvent('showSimplifiedView');
          document.dispatchEvent(event);
        });
      }
    }
  }
  
  // Listen for simplified view event
  document.addEventListener('showSimplifiedView', () => {
    const simplifiedView = document.querySelector('.mobile-simplified-view');
    if (simplifiedView) {
      (simplifiedView as HTMLElement).style.display = 'block';
    }
  });
</script>

<style>
  .mobile-warning {
    position: fixed;
    font-family: 'Space Grotesk', sans-serif;
    top: 0;
    left: 0;
    width: 100%;
    height: 100dvh;
    background: white;
    z-index: 10000;
    padding: 1rem;
    display: none;
    justify-content: center;
    align-items: center;
    text-align: left;
  }

  .warning-content {
    max-width: 90%;
  }

  .warning-content h2 {
    font-size: 1.8rem;
    margin-bottom: 1rem;
  }

  .warning-content p {
    font-size: 1.1rem;
    line-height: 1.5;
    margin-bottom: 1rem;
    color: #666;
  }

  /* Mobile-friendly styles - these will apply to all mobile devices but the warning will only show for Safari */
  @media (max-width: 768px) {
    .warning-content p {
      font-size: 1rem;
    }
  }

  .simplified-button {
    margin: 1rem 0;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    font-size: 0.9rem;
    cursor: pointer;
    font-family: 'Space Grotesk', sans-serif;
  }
  
  .simplified-button:hover {
    background: rgba(0, 0, 0, 0.9);
  }
</style> 